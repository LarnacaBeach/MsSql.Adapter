/* tslint:disable */
/* eslint-disable */

"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {};
const service_pb = __importDefault(require("./{{ string.downcase Name }}service_pb"));
const global = Function('return this')();

{{~
func getNullableConstructor(maxOrder)
~}}
constructor() {
    super();
    this._areNullablesEnabled = true;
    const nullFields = this._getNullables();
    this.setInternalnullfields(nullFields);
}
_getNullables() {
    let nullFields = this.getInternalnullfields_asU8();
    if (!nullFields || nullFields.byteLength === 0) {
        const totalBytes = {{ math.ceil maxOrder / 8 }};
        nullFields = new Uint8Array(totalBytes);
        nullFields.fill(255, 0, totalBytes);
    }
    return nullFields;
}
_isNullValue(order) {
    if (!this._areNullablesEnabled) {
        return false;
    }
    const nullFields = this._getNullables();
    const n = order - 1;
    return (nullFields[n / 8 | 0] & 1 << n % 8) != 0;
}
_getNullableValue(value, order) {
    if (this._isNullValue(order)) {
        return undefined;
    }
    return value;
}
_setNullableValue(isNullValue, order) {
    if (!this._areNullablesEnabled) {
        return;
    }
    const nullFields = this._getNullables();
    const n = order - 1;
    if (isNullValue) {
        nullFields[n / 8 | 0] |= 1 << n % 8;
    }
    else {
        nullFields[n / 8 | 0] &= ~(1 << n % 8);
    }
    this.setInternalnullfields(nullFields);
}
static serializeBinaryToWriter(message, writer) {
    message._areNullablesEnabled = false;
    super.serializeBinaryToWriter(message, writer);
    message._areNullablesEnabled = true;
}
static deserializeBinaryFromReader(msg, reader) {
    const nullFields = msg.getInternalnullfields_asU8();
    nullFields.fill(0, 0, nullFields.byteLength);
    msg.setInternalnullfields(nullFields);
    msg._areNullablesEnabled = false;
    super.deserializeBinaryFromReader(msg, reader);
    msg._areNullablesEnabled = true;
    return msg;
}
{{~
end

func getHasMethod(field, order)
~}}
has{{ field }}() {
    return super.has{{ field }}() && !this._isNullValue({{ order }});
}
{{~
end

func getClearMethod(field, order)
~}}
clear{{ field }}() {
    super.clear{{ field }}();
    this._setNullableValue(true, {{ order }});
}
{{~
end

func getGetterMethod(field, order)
~}}
get{{ field }}() {
    return this._getNullableValue(super.get{{ field }}(), {{ order }});
}
{{~
end

func getSetterMethod(field, order)
~}}
set{{ field }}(value) {
    super.set{{ field }}(value);
    this._setNullableValue(typeof value === "undefined", {{ order }});
    return this;
}
{{~
end

func getObjectProperty(name, sqlType)
    paramName = ToProtoCase name
    memberName = ToLowerFirst paramName

    if sqlType == "structured"
~}}
{{ memberName }}: (_a = msg.get{{ paramName }}List()) === null || _a === void 0 ? void 0 : _a.map(x => x.toObject(includeInstance)),
{{~
    else
        if (IsDatetime sqlType) || (IsDecimal sqlType)
~}}
{{ memberName }}: (_a = msg.get{{ paramName }}()) === null || _a === void 0 ? void 0 : _a.toObject(includeInstance),
{{~
        else
~}}
{{ memberName }}: msg.get{{ paramName }}(),
{{~
        end
    end
end

func getExport(className)
~}}
exports.{{ className }} = {{ className }};
exports.default.{{ className }} = {{ className }};
global.proto.{{ Namespace }}.{{ ToPascalCase DbMeta.Name }}.{{ className }} = {{ className }};
{{~
end

listedTVP = []

for proc in DbMeta.Procedures
    baseClassName = GetBaseClassName proc.SpName
~}}
class {{ baseClassName }}Request extends service_pb.default.{{ baseClassName }}Request {
    {{ getNullableConstructor proc.RequestMaxOrder }}
{{~
    for param in proc.Request
        if param.TVP != null
            continue
        end

        memberType = GetJavascriptFriendlyType param.SqlType
        memberName = ToProtoCase param.Name

        if (IsDatetime param.SqlType) || (IsDecimal param.SqlType)
~}}
    {{ getHasMethod memberName param.Order ~}}
    {{ getClearMethod memberName param.Order ~}}
{{~
        end
~}}
    {{ getGetterMethod memberName param.Order ~}}
    {{ getSetterMethod memberName param.Order }}
{{~
    end
~}}
    static toObject(includeInstance, msg) {
        let _a;
        const obj = {
{{~
    for param in proc.Request
        if param.TVP!=null
~}}
            {{ getObjectProperty param.Name "structured" ~}}
{{~
        else
~}}
            {{ getObjectProperty param.Name param.SqlType ~}}
{{~
        end
    end
~}}
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    }
}
{{ getExport (baseClassName + "Request") }}
{{~
    for param in proc.Request
        className = "TVP" + param.Name

        if (param.TVP == null) || (array.contains listedTVP className)
            continue
        end

        listedTVP = array.add listedTVP className
~}}
class {{ className }} extends service_pb.default.{{ className }} {   
    {{ getNullableConstructor param.TVPMaxOrder }}
{{~
        for p in param.TVP
            memberType = GetJavascriptFriendlyType p.SqlType
            memberName = ToProtoCase p.Name

            if (IsDatetime p.SqlType) || (IsDecimal p.SqlType)
~}}
    {{ getHasMethod memberName p.Order ~}}
    {{ getClearMethod memberName p.Order ~}}
{{~
            end
~}}
    {{ getGetterMethod memberName p.Order ~}}
    {{ getSetterMethod memberName p.Order }}
{{~
        end
~}}
    static toObject(includeInstance, msg) {
        let _a;
        const obj = {
{{~
        for p in param.TVP
~}}
            {{ getObjectProperty p.Name p.SqlType ~}}
{{~
        end
~}}
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    }
}
{{ getExport ("TVP" + param.Name) }}
{{~
    end
~}}

class {{ baseClassName }}Response extends service_pb.default.{{ baseClassName }}Response {
}
{{ getExport (baseClassName + "Response") }}

{{~
    for param in proc.Responses
        if param.Order <= 0
            continue
        end

        responseParamClassName = baseClassName + "Item" + (param.Order - 2)
~}}
class {{ responseParamClassName }} extends service_pb.default.{{ responseParamClassName }} {
    {{ getNullableConstructor param.ParamsMaxOrder }}
{{~
        for p in param.Params
            memberType = GetJavascriptFriendlyType p.SqlType
            memberName = ToProtoCase p.Name

            if (IsDatetime p.SqlType) || (IsDecimal p.SqlType)
~}}
    {{ getHasMethod memberName p.Order ~}}
    {{ getClearMethod memberName p.Order ~}}
{{~
            end
~}}
    {{ getGetterMethod memberName p.Order ~}}
    {{ getSetterMethod memberName p.Order }}
{{~
        end
~}}
    static toObject(includeInstance, msg) {
        let _a;
        const obj = {
{{~
        for p in param.Params
            if param.TVP!=null
~}}
            {{ getObjectProperty p.Name "structured" ~}}
{{~
            else
~}}
            {{ getObjectProperty p.Name p.SqlType ~}}
{{~
            end
        end
~}}
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    }
}
{{ getExport responseParamClassName ~}}
{{~
    end
end
~}}